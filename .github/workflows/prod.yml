name: CI/CD Pipeline - Account Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - 'main'
      - 'BANK_**'
      - 'BANK_*/*'

jobs:
  analyze:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    outputs:
      task-id: ${{ steps.extract-task-id.outputs.task-id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Build with Maven (para Jacoco)
        run: mvn clean verify

      - name: Install SonarScanner CLI
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.2.4997-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-5.0.2.4997-linux /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Run SonarScanner CLI
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          /opt/sonar-scanner/bin/sonar-scanner \
            -Dsonar.login=${SONAR_TOKEN}

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: analyze
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check SonarCloud Quality Gate status
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "üîé Obteniendo √∫ltimo an√°lisis de SonarCloud..."

          analysisId=$(curl -s -u "${SONAR_TOKEN}:" \
            "https://sonarcloud.io/api/project_analyses/search?project=my-banking-app_bank-ms-account-service" \
            | jq -r '.analyses[0].analysisId')

          if [ -z "$analysisId" ]; then
            echo "‚ùå No se pudo recuperar analysisId"
            exit 1
          fi

          echo "üîç analysisId: $analysisId"

          qualityGate=$(curl -s -u "${SONAR_TOKEN}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?analysisId=${analysisId}" \
            | jq -r '.projectStatus.status')

          echo "üîç Estado del Quality Gate: $qualityGate"

          if [ "$qualityGate" != "OK" ]; then
            echo "‚ùå El Quality Gate fall√≥. Deteniendo el pipeline."
            exit 1
          fi

          echo "‚úÖ Quality Gate aprobado. Continuando con el despliegue."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push production image
        run: |
          docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/account-service:prod .

      - name: SSH to VPS and deploy
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/account-service:prod
            docker stop account-service-prod || true
            docker rm account-service-prod || true
            docker run -d --restart=unless-stopped --name account-service-prod -p 8083:8083 \
              --network banking-net \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e API_KEY=${{ secrets.API_KEY }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              ${{ secrets.DOCKER_USERNAME }}/account-service:prod
